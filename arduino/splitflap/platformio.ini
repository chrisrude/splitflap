; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = Splitflap

; Note: change this to the target environment to get VSCode to handle code
; completion, etc, correctly.
default_envs = chainlink

[extra]
lib_deps =
    Adafruit NeoPixel@1.7.0
    Adafruit SSD1306@2.4.3
    Adafruit GFX Library@1.10.4

[esp32base]
platform = espressif32
framework = arduino
board = lilygo-t-display-s3
upload_speed = 921600
monitor_speed = 230400
monitor_echo = true
monitor_eol = LF
board_build.mcu = esp32s3

; This would be much cleaner if we didn't need to preserve Arduino IDE compatibility and the splitflap
; module driver could be pulled out to its own library and shared properly... Instead, we remove the
; .ino file (referred to as .ino.cpp during the build) and add additional source.
build_src_filter = +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<test/> -<tests/> -<Splitflap.ino.cpp> +<../esp32/core> +<../esp32/splitflap> +<../esp32/proto_gen>
lib_deps =
    bodmer/TFT_eSPI
    knolleary/PubSubClient @ 2.8
    bakercp/PacketSerial @ 1.4.0
    nanopb/Nanopb @ 0.4.6   ; Ideally this would reference the nanopb submodule, but that would require
                            ; everyone to check out submodules to just compile, so we use the library
                            ; registry for the runtime. The submodule is available for manually updating
                            ; the pre-compiled (checked in) .pb.h/c files when proto files change, but is
                            ; otherwise not used during application firmware compilation.
    ottowinter/ESPAsyncWebServer-esphome@^3.1.0
    thijse/ArduinoLog@^1.1.1

build_flags =
    -DSPI_IO=true
    -DSPLITFLAP_PIO_HARDWARE_CONFIG
    -DREVERSE_MOTOR_DIRECTION=false

    ; Set to true to enable MQTT support (see secrets.h.example for configuration)
    -DMQTT=false

    ; Set to true to enable HTTP support (see secrets.h.example for configuration)
    -DHTTP=false

    -DHTTP_SERVER=true

    ; Set to true to enable display support for T-Display (default)
    -DENABLE_DISPLAY=true

    -DUSER_SETUP_LOADED=1
    -DST7789_DRIVER=1
    -DCGRAM_OFFSET=1
    -DTFT_WIDTH=170
    -DTFT_HEIGHT=320
    -DTFT_PARALLEL_8_BIT=1
    -DTFT_BL=38

    -DTFT_D0=39
    -DTFT_D1=40
    -DTFT_D2=41
    -DTFT_D3=42
    -DTFT_D4=45
    -DTFT_D5=46
    -DTFT_D6=47
    -DTFT_D7=48

    -DTFT_WR=8
    -DTFT_RD=9
    -DTFT_DC=7
    -DTFT_CS=6
    -DTFT_RST=5

    -DLOAD_GLCD=1
    -DLOAD_GFXFF=1
    -DSPI_FREQUENCY=40000000

    -DNUM_MODULES=6


[env:chainlink]
extends=esp32base
build_flags =
    ${esp32base.build_flags}
    -DCHAINLINK

[env:chainlinkDebug]
extends=esp32base
build_flags =
    ${esp32base.build_flags}
    -DCHAINLINK
    -DCHAINLINK_DEBUG
build_type = debug
monitor_filters = esp32_exception_decoder
